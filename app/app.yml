apiVersion: v1
kind: Namespace
metadata:
  name: app1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
        - name: init-substitute
          image: docker.io/alpine:latest  # Use the Alpine image, which includes envsubst
          command:
            - sh
            - -c
            - |
              # Install gettext (contains envsubst) on the fly
              apk add --no-cache gettext

              # Print the environment variable to verify it's being passed correctly
              echo "COLOUR=${COLOUR}"

              # Perform environment variable substitution
              envsubst < /etc/nginx/templates/index.html > /usr/share/nginx/html/index.html

              # Check if the substitution was successful by printing the output file
              cat /usr/share/nginx/html/index.html

              # Set proper file permissions
              chmod 644 /usr/share/nginx/html/index.html
          env:
            - name: COLOUR
              value: "green"  # This can be replaced with any color
          volumeMounts:
            - name: html-template
              mountPath: /etc/nginx/templates  # Mount the ConfigMap to this path
            - name: html-volume
              mountPath: /usr/share/nginx/html
      containers:
        - name: nginx
          image: docker.io/nginx:latest
          volumeMounts:
            - name: html-volume
              mountPath: /usr/share/nginx/html  # Nginx will serve the content from here
      volumes:
        - name: html-template
          configMap:
            name: nginx-page-template  # ConfigMap containing the index.html
        - name: html-volume
          emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-page-template
  namespace: app1
data:
  index.html: |
    <!DOCTYPE html>
    <html>
      <head>
        <title>ArgoCD Testing</title>
        <style>
          body {
            background-color: ${COLOUR};  <!-- Use environment variable -->
            color: black;
            text-align: center;
            font-family: Arial, sans-serif;
            padding-top: 20%;
          }
        </style>
      </head>
      <body>
        <h1>ArgoCD Testing</h1>
      </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: app1
spec:
  selector:
    app: nginx  # This should match the label of the pods in the deployment
  ports:
    - protocol: TCP
      port: 80         # Port the service will expose
      targetPort: 80    # Port on the container that the service will forward to
  type: ClusterIP  # Expose the service externally (can also use NodePort or ClusterIP depending on the requirement)
